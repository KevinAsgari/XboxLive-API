<Type Name="XboxLiveUser" FullName="Microsoft.Xbox.Services.System.XboxLiveUser">
  <TypeSignature Language="C#" Value="public sealed class XboxLiveUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XboxLiveUser extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Xbox.Services.System.XboxLiveUser" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XboxLiveUser" />
  <TypeSignature Language="F#" Value="type XboxLiveUser = class&#xA;    interface __IXboxLiveUserPublicNonVirtuals" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
    <AssemblyVersion>255.255.255.255</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Activatable(typeof(Microsoft.Xbox.Services.System.__IXboxLiveUserFactory), 1)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Activatable(1)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.MarshalingBehavior(Windows.Foundation.Metadata.MarshalingType.Agile)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Static(typeof(Microsoft.Xbox.Services.System.__IXboxLiveUserStatics), 1)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Threading(Windows.Foundation.Metadata.ThreadingModel.Both)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Version(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
Represents a player that is associated with a device or a controller.
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XboxLiveUser ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Windows.Foundation.Metadata.Overload("CreateInstance2")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
Creates a new instance of XboxLiveUser for Single User Application.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XboxLiveUser (Windows.System.User systemUser);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor([in]class Windows.System.User systemUser) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.#ctor(Windows.System.User)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (systemUser As User)" />
      <MemberSignature Language="F#" Value="new Microsoft.Xbox.Services.System.XboxLiveUser : Windows.System.User -&gt; Microsoft.Xbox.Services.System.XboxLiveUser" Usage="new Microsoft.Xbox.Services.System.XboxLiveUser systemUser" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Windows.Foundation.Metadata.Overload("CreateInstance1")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="systemUser" Type="Windows.System.User" />
      </Parameters>
      <Docs>
        <param name="systemUser">To be added.</param>
        <summary>
Creates a new instance of XboxLiveUser for Multi-User Application.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AgeGroup">
      <MemberSignature Language="C#" Value="public string AgeGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AgeGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.AgeGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AgeGroup As String" />
      <MemberSignature Language="F#" Value="member this.AgeGroup : string" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.AgeGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.AgeGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets the age group of the user.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gamertag">
      <MemberSignature Language="C#" Value="public string Gamertag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Gamertag" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.Gamertag" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Gamertag As String" />
      <MemberSignature Language="F#" Value="member this.Gamertag : string" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.Gamertag" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.Gamertag</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The Xbox Live public gamertag name associated with the user.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAndSignatureArrayAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureArrayAsync (string httpMethod, string url, string headers, byte[] requestBodyArray);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureArrayAsync([in]string httpMethod, [in]string url, [in]string headers, [in]unsigned int8[] requestBodyArray) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.GetTokenAndSignatureArrayAsync(System.String,System.String,System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAndSignatureArrayAsync (httpMethod As String, url As String, headers As String, requestBodyArray As Byte()) As IAsyncOperation(Of GetTokenAndSignatureResult)" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAndSignatureArrayAsync : string * string * string * byte[] -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;&#xA;override this.GetTokenAndSignatureArrayAsync : string * string * string * byte[] -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;" Usage="xboxLiveUser.GetTokenAndSignatureArrayAsync (httpMethod, url, headers, requestBodyArray)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.GetTokenAndSignatureArrayAsync(System.String,System.String,System.String,System.Byte[])</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpMethod" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="headers" Type="System.String" />
        <Parameter Name="requestBodyArray" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="httpMethod">The HTTP method (GET, PUT, POST, etc.) for this request.</param>
        <param name="url">The URL for which to retrieve the authorization token and digital signature.</param>
        <param name="headers">The headers to be included in the HTTP request.</param>
        <param name="requestBodyArray">To be added.</param>
        <summary>
Retrieves an authorization token and digital signature for an HTTP request by this user,
with a request body expressed as an array of bytes.
</summary>
        <returns>
An interface for tracking the progress of the asynchronous call. The result is an object
indicating the token and the digital signature of the entire request, including the token.
</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenAndSignatureAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureAsync (string httpMethod, string url, string headers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureAsync([in]string httpMethod, [in]string url, [in]string headers) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.GetTokenAndSignatureAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAndSignatureAsync (httpMethod As String, url As String, headers As String) As IAsyncOperation(Of GetTokenAndSignatureResult)" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAndSignatureAsync : string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;&#xA;override this.GetTokenAndSignatureAsync : string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;" Usage="xboxLiveUser.GetTokenAndSignatureAsync (httpMethod, url, headers)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.GetTokenAndSignatureAsync(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Windows.Foundation.Metadata.Overload("GetTokenAndSignatureAsync2")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpMethod" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="headers" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpMethod">The HTTP method (GET, PUT, POST, etc.) for this request.</param>
        <param name="url">The URL for which to retrieve the authorization token and digital signature.</param>
        <param name="headers">The headers to be included in the HTTP request.</param>
        <summary>
Retrieves an authorization token and digital signature for an HTTP request by this user,
with no request body.
</summary>
        <returns>
An interface for tracking the progress of the asynchronous call. The result is an object
indicating the token and the digital signature of the entire request, including the token.
</returns>
        <remarks />
      </Docs>
    </Member>
    <Member MemberName="GetTokenAndSignatureAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureAsync (string httpMethod, string url, string headers, string body);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt; GetTokenAndSignatureAsync([in]string httpMethod, [in]string url, [in]string headers, [in]string body) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.GetTokenAndSignatureAsync(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTokenAndSignatureAsync (httpMethod As String, url As String, headers As String, body As String) As IAsyncOperation(Of GetTokenAndSignatureResult)" />
      <MemberSignature Language="F#" Value="abstract member GetTokenAndSignatureAsync : string * string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;&#xA;override this.GetTokenAndSignatureAsync : string * string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;" Usage="xboxLiveUser.GetTokenAndSignatureAsync (httpMethod, url, headers, body)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.GetTokenAndSignatureAsync(System.String,System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Windows.Foundation.Metadata.Overload("GetTokenAndSignatureAsync1")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.GetTokenAndSignatureResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpMethod" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="headers" Type="System.String" />
        <Parameter Name="body" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpMethod">The HTTP method (GET, PUT, POST, etc.) for this request.</param>
        <param name="url">The URL for which to retrieve the authorization token and digital signature.</param>
        <param name="headers">The headers to be included in the HTTP request.</param>
        <param name="body">The body of the request, expressed as a string.</param>
        <summary>
Retrieves an authorization token and digital signature for an HTTP request by this user,
with a request body expressed as a string.
</summary>
        <returns>
An interface for tracking the progress of the asynchronous call. The result is an object
indicating the token and the digital signature of the entire request, including the token.
</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignedIn">
      <MemberSignature Language="C#" Value="public bool IsSignedIn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSignedIn" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.IsSignedIn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSignedIn As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsSignedIn : bool" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.IsSignedIn" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.IsSignedIn</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Indicates if the Xbox Live user is currently signed in.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Privileges">
      <MemberSignature Language="C#" Value="public string Privileges { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Privileges" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.Privileges" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Privileges As String" />
      <MemberSignature Language="F#" Value="member this.Privileges : string" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.Privileges" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.Privileges</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets the privileges of the user.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt; SignInAsync (object coreDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.System.SignInResult&gt; SignInAsync([in]object coreDispatcher) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.SignInAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignInAsync (coreDispatcher As Object) As IAsyncOperation(Of SignInResult)" />
      <MemberSignature Language="F#" Value="abstract member SignInAsync : obj -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;&#xA;override this.SignInAsync : obj -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;" Usage="xboxLiveUser.SignInAsync coreDispatcher" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.SignInAsync(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coreDispatcher" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="coreDispatcher">The Windows Runtime core event message dispatcher.</param>
        <summary>
Attempt to sign a player into their Xbox Live account. This call may bring up
a sign-in user interface.
</summary>
        <returns>
An interface for tracking the progress of the asynchronous call.
</returns>
        <remarks>
You should only call this method if silent sign-in indicates that user interaction is required.

This is cast as Platform::Object^ instead of Windows::UI::Core::CoreDispatcher^ to avoid the
[Windows::Foundation::Metadata::WebHostHidden] requirement.

If you're calling this API from non-UI thread, parameter coreDispatcherObj is required, so that app UI
can be rendered and locale can be generated.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInSilentlyAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt; SignInSilentlyAsync (object coreDispatcher);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.System.SignInResult&gt; SignInSilentlyAsync([in]object coreDispatcher) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.System.XboxLiveUser.SignInSilentlyAsync(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function SignInSilentlyAsync (coreDispatcher As Object) As IAsyncOperation(Of SignInResult)" />
      <MemberSignature Language="F#" Value="abstract member SignInSilentlyAsync : obj -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;&#xA;override this.SignInSilentlyAsync : obj -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;" Usage="xboxLiveUser.SignInSilentlyAsync coreDispatcher" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.SignInSilentlyAsync(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.System.SignInResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="coreDispatcher" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="coreDispatcher">The Windows Runtime core event message dispatcher.</param>
        <summary>
Attempt to silently sign a player into their Xbox Live account. This call can be used to prefetch xbox live
data before the UI is ready.
</summary>
        <returns>
An interface for tracking the progress of the asynchronous call.
</returns>
        <remarks>
If the app is unable to silently sign-in, the API return SignInResult with UserInteractionRequired Status .
to sign-in, so the app should then call SignInAsync().

If you're calling this API from non-UI thread, parameter coreDispatcherObj is required, so that app locale can be generated.
</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutCompleted">
      <MemberSignature Language="C#" Value="public static event Windows.Foundation.EventHandler&lt;Microsoft.Xbox.Services.System.SignOutCompletedEventArgs&gt; SignOutCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class Windows.Foundation.EventHandler`1&lt;class Microsoft.Xbox.Services.System.SignOutCompletedEventArgs&gt; SignOutCompleted" />
      <MemberSignature Language="DocId" Value="E:Microsoft.Xbox.Services.System.XboxLiveUser.SignOutCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event SignOutCompleted As EventHandler(Of SignOutCompletedEventArgs) " />
      <MemberSignature Language="F#" Value="member this.SignOutCompleted : Windows.Foundation.EventHandler&lt;Microsoft.Xbox.Services.System.SignOutCompletedEventArgs&gt; " Usage="member this.SignOutCompleted : Windows.Foundation.EventHandler&lt;Microsoft.Xbox.Services.System.SignOutCompletedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.EventHandler&lt;Microsoft.Xbox.Services.System.SignOutCompletedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Event signaling that sign out has completed for a user. 
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebAccountId">
      <MemberSignature Language="C#" Value="public string WebAccountId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebAccountId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.WebAccountId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebAccountId As String" />
      <MemberSignature Language="F#" Value="member this.WebAccountId : string" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.WebAccountId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.WebAccountId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets id of WebAccount returned by the Xbox live WebAccountProvider.
</summary>
        <value>To be added.</value>
        <remarks>
Check https://msdn.microsoft.com/en-us/library/windows/apps/windows.security.credentials.webaccount.aspx
for more information about WebAccount
</remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsSystemUser">
      <MemberSignature Language="C#" Value="public Windows.System.User WindowsSystemUser { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Windows.System.User WindowsSystemUser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.WindowsSystemUser" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowsSystemUser As User" />
      <MemberSignature Language="F#" Value="member this.WindowsSystemUser : Windows.System.User" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.WindowsSystemUser" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.WindowsSystemUser</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.System.User</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The Windows System NT user associated with the Xbox Live User, only available in Multi-User application.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XboxUserId">
      <MemberSignature Language="C#" Value="public string XboxUserId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XboxUserId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.System.XboxLiveUser.XboxUserId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XboxUserId As String" />
      <MemberSignature Language="F#" Value="member this.XboxUserId : string" Usage="Microsoft.Xbox.Services.System.XboxLiveUser.XboxUserId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.System.__IXboxLiveUserPublicNonVirtuals.XboxUserId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets a unique ID that is tied to the user's account which persists across multiple devices.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="LeaderboardQuery" FullName="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery">
  <TypeSignature Language="C#" Value="public sealed class LeaderboardQuery" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed LeaderboardQuery extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class LeaderboardQuery" />
  <TypeSignature Language="F#" Value="type LeaderboardQuery = class&#xA;    interface __ILeaderboardQueryPublicNonVirtuals" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
    <AssemblyVersion>255.255.255.255</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Activatable(1)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.MarshalingBehavior(Windows.Foundation.Metadata.MarshalingType.Agile)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Threading(Windows.Foundation.Metadata.ThreadingModel.Both)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Version(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
Represents the results of a leaderboard request.
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LeaderboardQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Windows.Foundation.Metadata.Overload("CreateInstance1")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
Constructs a new LeaderboardQuery object.
</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasNext">
      <MemberSignature Language="C#" Value="public bool HasNext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasNext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.HasNext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasNext As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasNext : bool" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.HasNext" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.HasNext</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
True if there is more data in the leaderboard
If this is true then you can pass this object into the GetLeaderboard call
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxItems">
      <MemberSignature Language="C#" Value="public uint MaxItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.MaxItems" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxItems As UInteger" />
      <MemberSignature Language="F#" Value="member this.MaxItems : uint32 with get, set" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.MaxItems" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.MaxItems</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets/Sets maximum items that the resulting leaderboard will contain
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Order">
      <MemberSignature Language="C#" Value="public Microsoft.Xbox.Services.Leaderboard.SortOrder Order { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Xbox.Services.Leaderboard.SortOrder Order" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.Order" />
      <MemberSignature Language="VB.NET" Value="Public Property Order As SortOrder" />
      <MemberSignature Language="F#" Value="member this.Order : Microsoft.Xbox.Services.Leaderboard.SortOrder with get, set" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.Order" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.Order</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Xbox.Services.Leaderboard.SortOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets/Sets sort order for the resulting leaderboard
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipResultToMe">
      <MemberSignature Language="C#" Value="public bool SkipResultToMe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipResultToMe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SkipResultToMe" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipResultToMe As Boolean" />
      <MemberSignature Language="F#" Value="member this.SkipResultToMe : bool with get, set" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SkipResultToMe" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.SkipResultToMe</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets/Sets whether or not the resulting leaderboard will start with the 
user that requested the leaderboard.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipResultToRank">
      <MemberSignature Language="C#" Value="public uint SkipResultToRank { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 SkipResultToRank" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SkipResultToRank" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipResultToRank As UInteger" />
      <MemberSignature Language="F#" Value="member this.SkipResultToRank : uint32 with get, set" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SkipResultToRank" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.SkipResultToRank</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets/Sets Which rank the resulting leaderboard will start at
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SocialGroup">
      <MemberSignature Language="C#" Value="public string SocialGroup { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SocialGroup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SocialGroup" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SocialGroup As String" />
      <MemberSignature Language="F#" Value="member this.SocialGroup : string" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.SocialGroup" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.SocialGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets the social group of the previous query. This property will only be set if its a query 
gotten from get_next_query and the previous query was a social query
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatName">
      <MemberSignature Language="C#" Value="public string StatName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StatName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.StatName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StatName As String" />
      <MemberSignature Language="F#" Value="member this.StatName : string" Usage="Microsoft.Xbox.Services.Leaderboard.LeaderboardQuery.StatName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Leaderboard.__ILeaderboardQueryPublicNonVirtuals.StatName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Gets the stat name of the previous query. This property will only be set if its a query 
gotten from get_next_query
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
<Type Name="MatchmakingService" FullName="Microsoft.Xbox.Services.Matchmaking.MatchmakingService">
  <TypeSignature Language="C#" Value="public sealed class MatchmakingService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed MatchmakingService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Xbox.Services.Matchmaking.MatchmakingService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MatchmakingService" />
  <TypeSignature Language="F#" Value="type MatchmakingService = class&#xA;    interface __IMatchmakingServicePublicNonVirtuals" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
    <AssemblyVersion>255.255.255.255</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.MarshalingBehavior(Windows.Foundation.Metadata.MarshalingType.Agile)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Threading(Windows.Foundation.Metadata.ThreadingModel.Both)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Version(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
Represents a service for matchmaking. 
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateMatchTicketAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.CreateMatchTicketResponse&gt; CreateMatchTicketAsync (Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference ticketSessionReference, string matchmakingServiceConfigurationId, string hopperName, Windows.Foundation.TimeSpan ticketTimeout, Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode preserveSession, string ticketAttributesJson);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.Matchmaking.CreateMatchTicketResponse&gt; CreateMatchTicketAsync([in]class Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference ticketSessionReference, [in]string matchmakingServiceConfigurationId, [in]string hopperName, [in]valuetype Windows.Foundation.TimeSpan ticketTimeout, [in]valuetype Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode preserveSession, [in]string ticketAttributesJson) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.Matchmaking.MatchmakingService.CreateMatchTicketAsync(Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference,System.String,System.String,Windows.Foundation.TimeSpan,Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMatchTicketAsync (ticketSessionReference As MultiplayerSessionReference, matchmakingServiceConfigurationId As String, hopperName As String, ticketTimeout As TimeSpan, preserveSession As PreserveSessionMode, ticketAttributesJson As String) As IAsyncOperation(Of CreateMatchTicketResponse)" />
      <MemberSignature Language="F#" Value="abstract member CreateMatchTicketAsync : Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference * string * string * Windows.Foundation.TimeSpan * Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.CreateMatchTicketResponse&gt;&#xA;override this.CreateMatchTicketAsync : Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference * string * string * Windows.Foundation.TimeSpan * Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.CreateMatchTicketResponse&gt;" Usage="matchmakingService.CreateMatchTicketAsync (ticketSessionReference, matchmakingServiceConfigurationId, hopperName, ticketTimeout, preserveSession, ticketAttributesJson)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.Matchmaking.__IMatchmakingServicePublicNonVirtuals.CreateMatchTicketAsync(Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference,System.String,System.String,Windows.Foundation.TimeSpan,Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.CreateMatchTicketResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticketSessionReference" Type="Microsoft.Xbox.Services.Multiplayer.MultiplayerSessionReference" />
        <Parameter Name="matchmakingServiceConfigurationId" Type="System.String" />
        <Parameter Name="hopperName" Type="System.String" />
        <Parameter Name="ticketTimeout" Type="Windows.Foundation.TimeSpan" />
        <Parameter Name="preserveSession" Type="Microsoft.Xbox.Services.Matchmaking.PreserveSessionMode" />
        <Parameter Name="ticketAttributesJson" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ticketSessionReference">The multiplayer session to use for the match.</param>
        <param name="matchmakingServiceConfigurationId">The service configuration ID for the match.</param>
        <param name="hopperName">The name of the hopper.</param>
        <param name="ticketTimeout">The maximum time to wait for players to join the session.</param>
        <param name="preserveSession">Indicates if the session should be preserved.</param>
        <param name="ticketAttributesJson">The ticket attributes for the session. (Optional)</param>
        <summary>
Sends a matchmaking request to the server and returns the match ticket with a ticket id.
</summary>
        <returns>The async object for notifying when the operation is completed. With the handler, a new match ticket
object is returned. The match ticket object contains server returned information such as ticket id and wait
time, and also contains copies of the title specified data from the ticket data object.</returns>
        <remarks>Calls V103 POST /serviceconfigs/{serviceConfigId}/hoppers/{hopperName}</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteMatchTicketAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncAction DeleteMatchTicketAsync (string serviceConfigurationId, string hopperName, string ticketId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncAction DeleteMatchTicketAsync([in]string serviceConfigurationId, [in]string hopperName, [in]string ticketId) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.Matchmaking.MatchmakingService.DeleteMatchTicketAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteMatchTicketAsync (serviceConfigurationId As String, hopperName As String, ticketId As String) As IAsyncAction" />
      <MemberSignature Language="F#" Value="abstract member DeleteMatchTicketAsync : string * string * string -&gt; Windows.Foundation.IAsyncAction&#xA;override this.DeleteMatchTicketAsync : string * string * string -&gt; Windows.Foundation.IAsyncAction" Usage="matchmakingService.DeleteMatchTicketAsync (serviceConfigurationId, hopperName, ticketId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.Matchmaking.__IMatchmakingServicePublicNonVirtuals.DeleteMatchTicketAsync(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncAction</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceConfigurationId" Type="System.String" />
        <Parameter Name="hopperName" Type="System.String" />
        <Parameter Name="ticketId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceConfigurationId">The service config id that is specific for the title.</param>
        <param name="hopperName">The name of the hopper where the match ticket is located.</param>
        <param name="ticketId">The id of the ticket to delete on the server.</param>
        <summary>
Deletes a the match ticket on the server.
</summary>
        <returns>The async object for notifying when the operation has been completed.</returns>
        <remarks>Calls V103 DELETE /serviceconfigs/{serviceConfigId}/hoppers/{hopperName}/tickets/{ticketId}</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHopperStatisticsAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.HopperStatisticsResponse&gt; GetHopperStatisticsAsync (string serviceConfigurationId, string hopperName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.Matchmaking.HopperStatisticsResponse&gt; GetHopperStatisticsAsync([in]string serviceConfigurationId, [in]string hopperName) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.Matchmaking.MatchmakingService.GetHopperStatisticsAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHopperStatisticsAsync (serviceConfigurationId As String, hopperName As String) As IAsyncOperation(Of HopperStatisticsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetHopperStatisticsAsync : string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.HopperStatisticsResponse&gt;&#xA;override this.GetHopperStatisticsAsync : string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.HopperStatisticsResponse&gt;" Usage="matchmakingService.GetHopperStatisticsAsync (serviceConfigurationId, hopperName)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.Matchmaking.__IMatchmakingServicePublicNonVirtuals.GetHopperStatisticsAsync(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.HopperStatisticsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceConfigurationId" Type="System.String" />
        <Parameter Name="hopperName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceConfigurationId">The service config id that is specific for the title.</param>
        <param name="hopperName">The name of the hopper to query stats for.</param>
        <summary>
Gets statistics about a hopper such as how many players are in it.
</summary>
        <returns>The async object for notifying when the operation is completed. With the handler, an object
containing statistics about the hopper is returned.</returns>
        <remarks>Calls V103 GET /serviceconfigs/{serviceConfigId}/hoppers/{hopperName}/stats</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMatchTicketDetailsAsync">
      <MemberSignature Language="C#" Value="public Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.MatchTicketDetailsResponse&gt; GetMatchTicketDetailsAsync (string serviceConfigurationId, string hopperName, string ticketId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Windows.Foundation.IAsyncOperation`1&lt;class Microsoft.Xbox.Services.Matchmaking.MatchTicketDetailsResponse&gt; GetMatchTicketDetailsAsync([in]string serviceConfigurationId, [in]string hopperName, [in]string ticketId) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Xbox.Services.Matchmaking.MatchmakingService.GetMatchTicketDetailsAsync(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMatchTicketDetailsAsync (serviceConfigurationId As String, hopperName As String, ticketId As String) As IAsyncOperation(Of MatchTicketDetailsResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetMatchTicketDetailsAsync : string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.MatchTicketDetailsResponse&gt;&#xA;override this.GetMatchTicketDetailsAsync : string * string * string -&gt; Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.MatchTicketDetailsResponse&gt;" Usage="matchmakingService.GetMatchTicketDetailsAsync (serviceConfigurationId, hopperName, ticketId)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Xbox.Services.Matchmaking.__IMatchmakingServicePublicNonVirtuals.GetMatchTicketDetailsAsync(System.String,System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.IAsyncOperation&lt;Microsoft.Xbox.Services.Matchmaking.MatchTicketDetailsResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceConfigurationId" Type="System.String" />
        <Parameter Name="hopperName" Type="System.String" />
        <Parameter Name="ticketId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceConfigurationId">The service config id that is specific for the title.</param>
        <param name="hopperName">The name of the hopper where the match ticket is located.</param>
        <param name="ticketId">The ticket id of the match ticket to retrieve.</param>
        <summary>
Retrieves the properties of a match ticket from the server.
</summary>
        <returns>The async object for notifying when the operation is completed. With the handler, the match
ticket object with the data for the ticket, including ticket id and wait time information, is returned
returned from the server.</returns>
        <remarks>Calls V103 GET /serviceconfigs/{serviceConfigId}/hoppers/{hopperName}/tickets/{ticketId}</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
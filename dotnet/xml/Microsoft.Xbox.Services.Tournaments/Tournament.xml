<Type Name="Tournament" FullName="Microsoft.Xbox.Services.Tournaments.Tournament">
  <TypeSignature Language="C#" Value="public sealed class Tournament" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Tournament extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Xbox.Services.Tournaments.Tournament" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Tournament" />
  <TypeSignature Language="F#" Value="type Tournament = class&#xA;    interface __ITournamentPublicNonVirtuals" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
    <AssemblyVersion>255.255.255.255</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.MarshalingBehavior(Windows.Foundation.Metadata.MarshalingType.Agile)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Threading(Windows.Foundation.Metadata.ThreadingModel.Both)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>Windows.Foundation.Metadata.Version(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
Represents tournament details.
</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CheckinEndTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime CheckinEndTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime CheckinEndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.CheckinEndTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckinEndTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.CheckinEndTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.CheckinEndTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.CheckinEndTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The end time of checkin. Must be before playingStart.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckinStartTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime CheckinStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime CheckinStartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.CheckinStartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckinStartTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.CheckinStartTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.CheckinStartTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.CheckinStartTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The start time of checkin. Must be before playingStart.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.Description" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Description As String" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.Description" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.Description</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
An additional, longer description of the tournament, intended for display.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime EndTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime EndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.EndTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.EndTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.EndTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.EndTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The datetime that this tournament has reached either the Canceled or Completed state. 
This is set automatically when a tournament is updated to be Canceled or Complete. 
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GameMode">
      <MemberSignature Language="C#" Value="public string GameMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GameMode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.GameMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GameMode As String" />
      <MemberSignature Language="F#" Value="member this.GameMode : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.GameMode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.GameMode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
A string representing the friendly name of the game mode
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasPrize">
      <MemberSignature Language="C#" Value="public bool HasPrize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasPrize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.HasPrize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasPrize As Boolean" />
      <MemberSignature Language="F#" Value="member this.HasPrize : bool" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.HasPrize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.HasPrize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
True if the tournament has a prize. False otherwise.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As String" />
      <MemberSignature Language="F#" Value="member this.Id : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The ID of the tournament. It is an opaque string specified by the tournament organizer.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCheckinOpen">
      <MemberSignature Language="C#" Value="public bool IsCheckinOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCheckinOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.IsCheckinOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCheckinOpen As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsCheckinOpen : bool" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.IsCheckinOpen" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.IsCheckinOpen</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
True when check-in is open. 
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPaused">
      <MemberSignature Language="C#" Value="public bool IsPaused { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPaused" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.IsPaused" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPaused As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPaused : bool" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.IsPaused" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.IsPaused</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
A flag indicating whether the tournament is currently paused.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPlayingOpen">
      <MemberSignature Language="C#" Value="public bool IsPlayingOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPlayingOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.IsPlayingOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPlayingOpen As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsPlayingOpen : bool" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.IsPlayingOpen" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.IsPlayingOpen</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
True when play is open.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRegistrationOpen">
      <MemberSignature Language="C#" Value="public bool IsRegistrationOpen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRegistrationOpen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.IsRegistrationOpen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRegistrationOpen As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsRegistrationOpen : bool" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.IsRegistrationOpen" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.IsRegistrationOpen</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
True when registration is open.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTeamSize">
      <MemberSignature Language="C#" Value="public uint MaxTeamSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxTeamSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.MaxTeamSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxTeamSize As UInteger" />
      <MemberSignature Language="F#" Value="member this.MaxTeamSize : uint32" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.MaxTeamSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.MaxTeamSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The max number of players that can play on a team.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTeamsRegistered">
      <MemberSignature Language="C#" Value="public uint MaxTeamsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MaxTeamsRegistered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.MaxTeamsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MaxTeamsRegistered As UInteger" />
      <MemberSignature Language="F#" Value="member this.MaxTeamsRegistered : uint32" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.MaxTeamsRegistered" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.MaxTeamsRegistered</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
This is the maximum number of registered teams. This does not include waitlisted teams.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTeamSize">
      <MemberSignature Language="C#" Value="public uint MinTeamSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinTeamSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.MinTeamSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinTeamSize As UInteger" />
      <MemberSignature Language="F#" Value="member this.MinTeamSize : uint32" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.MinTeamSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.MinTeamSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The min number of players required in a team.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinTeamsRegistered">
      <MemberSignature Language="C#" Value="public uint MinTeamsRegistered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 MinTeamsRegistered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.MinTeamsRegistered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MinTeamsRegistered As UInteger" />
      <MemberSignature Language="F#" Value="member this.MinTeamsRegistered : uint32" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.MinTeamsRegistered" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.MinTeamsRegistered</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
This is the minimum number of registered teams. This does not include waitlisted teams.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
A friendly name for the tournament, intended for display.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizerId">
      <MemberSignature Language="C#" Value="public string OrganizerId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizerId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.OrganizerId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizerId As String" />
      <MemberSignature Language="F#" Value="member this.OrganizerId : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.OrganizerId" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.OrganizerId</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The organizer of this tournament.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrganizerName">
      <MemberSignature Language="C#" Value="public string OrganizerName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrganizerName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.OrganizerName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrganizerName As String" />
      <MemberSignature Language="F#" Value="member this.OrganizerName : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.OrganizerName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.OrganizerName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
A string representing the friendly name of the organizer
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayingEndTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime PlayingEndTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime PlayingEndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.PlayingEndTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlayingEndTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.PlayingEndTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.PlayingEndTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.PlayingEndTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The time the tournament ends.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PlayingStartTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime PlayingStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime PlayingStartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.PlayingStartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PlayingStartTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.PlayingStartTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.PlayingStartTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.PlayingStartTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The time the tournament begins.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegistrationEndTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime RegistrationEndTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime RegistrationEndTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.RegistrationEndTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistrationEndTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.RegistrationEndTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.RegistrationEndTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.RegistrationEndTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The end time of registration. Must be before checkinStart.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegistrationStartTime">
      <MemberSignature Language="C#" Value="public Windows.Foundation.DateTime RegistrationStartTime { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Windows.Foundation.DateTime RegistrationStartTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.RegistrationStartTime" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegistrationStartTime As DateTime" />
      <MemberSignature Language="F#" Value="member this.RegistrationStartTime : Windows.Foundation.DateTime" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.RegistrationStartTime" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.RegistrationStartTime</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Windows.Foundation.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The start time of registration. Must be before checkinStart.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TeamsRegisteredCount">
      <MemberSignature Language="C#" Value="public uint TeamsRegisteredCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int32 TeamsRegisteredCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.TeamsRegisteredCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TeamsRegisteredCount As UInteger" />
      <MemberSignature Language="F#" Value="member this.TeamsRegisteredCount : uint32" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.TeamsRegisteredCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.TeamsRegisteredCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The number of teams registered for the tournament, not including waitlisted teams.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TeamSummary">
      <MemberSignature Language="C#" Value="public Microsoft.Xbox.Services.Tournaments.TeamSummary TeamSummary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Xbox.Services.Tournaments.TeamSummary TeamSummary" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.TeamSummary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TeamSummary As TeamSummary" />
      <MemberSignature Language="F#" Value="member this.TeamSummary : Microsoft.Xbox.Services.Tournaments.TeamSummary" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.TeamSummary" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.TeamSummary</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Xbox.Services.Tournaments.TeamSummary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
Represents a summary of team details for the user participating in the tournament.
Only applies for those tournaments where the user has already registered.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TournamentState">
      <MemberSignature Language="C#" Value="public Microsoft.Xbox.Services.Tournaments.TournamentState TournamentState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Xbox.Services.Tournaments.TournamentState TournamentState" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.TournamentState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TournamentState As TournamentState" />
      <MemberSignature Language="F#" Value="member this.TournamentState : Microsoft.Xbox.Services.Tournaments.TournamentState" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.TournamentState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.TournamentState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Xbox.Services.Tournaments.TournamentState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
The current state of the tournament. Tournaments are Active by default. 
Organizers can set the tournament to Canceled or Completed by explicitly updating the tournament.
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TournamentStyle">
      <MemberSignature Language="C#" Value="public string TournamentStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TournamentStyle" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Xbox.Services.Tournaments.Tournament.TournamentStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TournamentStyle As String" />
      <MemberSignature Language="F#" Value="member this.TournamentStyle : string" Usage="Microsoft.Xbox.Services.Tournaments.Tournament.TournamentStyle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Xbox.Services.Tournaments.__ITournamentPublicNonVirtuals.TournamentStyle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Xbox.Services</AssemblyName>
        <AssemblyVersion>255.255.255.255</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
A string representing the style of the tournament, such as "Single Elimination" or "Round Robin"
</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>